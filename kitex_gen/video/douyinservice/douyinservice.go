// Code generated by Kitex v0.4.4. DO NOT EDIT.

package douyinservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	video "tiktok-video/kitex_gen/video"
)

func serviceInfo() *kitex.ServiceInfo {
	return douyinServiceServiceInfo
}

var douyinServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "DouyinService"
	handlerType := (*video.DouyinService)(nil)
	methods := map[string]kitex.MethodInfo{
		"DouyinPublishActionMethod": kitex.NewMethodInfo(douyinPublishActionMethodHandler, newDouyinServiceDouyinPublishActionMethodArgs, newDouyinServiceDouyinPublishActionMethodResult, false),
		"DouyinPublishListMethod":   kitex.NewMethodInfo(douyinPublishListMethodHandler, newDouyinServiceDouyinPublishListMethodArgs, newDouyinServiceDouyinPublishListMethodResult, false),
		"DouyinGetVedioMethod":      kitex.NewMethodInfo(douyinGetVedioMethodHandler, newDouyinServiceDouyinGetVedioMethodArgs, newDouyinServiceDouyinGetVedioMethodResult, false),
		"DouyinMGetVedioMethod":     kitex.NewMethodInfo(douyinMGetVedioMethodHandler, newDouyinServiceDouyinMGetVedioMethodArgs, newDouyinServiceDouyinMGetVedioMethodResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "video",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.4.4",
		Extra:           extra,
	}
	return svcInfo
}

func douyinPublishActionMethodHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*video.DouyinServiceDouyinPublishActionMethodArgs)
	realResult := result.(*video.DouyinServiceDouyinPublishActionMethodResult)
	success, err := handler.(video.DouyinService).DouyinPublishActionMethod(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newDouyinServiceDouyinPublishActionMethodArgs() interface{} {
	return video.NewDouyinServiceDouyinPublishActionMethodArgs()
}

func newDouyinServiceDouyinPublishActionMethodResult() interface{} {
	return video.NewDouyinServiceDouyinPublishActionMethodResult()
}

func douyinPublishListMethodHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*video.DouyinServiceDouyinPublishListMethodArgs)
	realResult := result.(*video.DouyinServiceDouyinPublishListMethodResult)
	success, err := handler.(video.DouyinService).DouyinPublishListMethod(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newDouyinServiceDouyinPublishListMethodArgs() interface{} {
	return video.NewDouyinServiceDouyinPublishListMethodArgs()
}

func newDouyinServiceDouyinPublishListMethodResult() interface{} {
	return video.NewDouyinServiceDouyinPublishListMethodResult()
}

func douyinGetVedioMethodHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*video.DouyinServiceDouyinGetVedioMethodArgs)
	realResult := result.(*video.DouyinServiceDouyinGetVedioMethodResult)
	success, err := handler.(video.DouyinService).DouyinGetVedioMethod(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newDouyinServiceDouyinGetVedioMethodArgs() interface{} {
	return video.NewDouyinServiceDouyinGetVedioMethodArgs()
}

func newDouyinServiceDouyinGetVedioMethodResult() interface{} {
	return video.NewDouyinServiceDouyinGetVedioMethodResult()
}

func douyinMGetVedioMethodHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*video.DouyinServiceDouyinMGetVedioMethodArgs)
	realResult := result.(*video.DouyinServiceDouyinMGetVedioMethodResult)
	success, err := handler.(video.DouyinService).DouyinMGetVedioMethod(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newDouyinServiceDouyinMGetVedioMethodArgs() interface{} {
	return video.NewDouyinServiceDouyinMGetVedioMethodArgs()
}

func newDouyinServiceDouyinMGetVedioMethodResult() interface{} {
	return video.NewDouyinServiceDouyinMGetVedioMethodResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) DouyinPublishActionMethod(ctx context.Context, req *video.DouyinPublishActionRequest) (r *video.DouyinPublishActionResponse, err error) {
	var _args video.DouyinServiceDouyinPublishActionMethodArgs
	_args.Req = req
	var _result video.DouyinServiceDouyinPublishActionMethodResult
	if err = p.c.Call(ctx, "DouyinPublishActionMethod", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) DouyinPublishListMethod(ctx context.Context, req *video.DouyinPublishListRequest) (r *video.DouyinPublishListResponse, err error) {
	var _args video.DouyinServiceDouyinPublishListMethodArgs
	_args.Req = req
	var _result video.DouyinServiceDouyinPublishListMethodResult
	if err = p.c.Call(ctx, "DouyinPublishListMethod", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) DouyinGetVedioMethod(ctx context.Context, req *video.GetVedioRequest) (r *video.GetVedioResponse, err error) {
	var _args video.DouyinServiceDouyinGetVedioMethodArgs
	_args.Req = req
	var _result video.DouyinServiceDouyinGetVedioMethodResult
	if err = p.c.Call(ctx, "DouyinGetVedioMethod", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) DouyinMGetVedioMethod(ctx context.Context, req *video.MGetVedioRequest) (r *video.MGetVedioResponse, err error) {
	var _args video.DouyinServiceDouyinMGetVedioMethodArgs
	_args.Req = req
	var _result video.DouyinServiceDouyinMGetVedioMethodResult
	if err = p.c.Call(ctx, "DouyinMGetVedioMethod", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
